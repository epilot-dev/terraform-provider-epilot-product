// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/operations"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
)

// Ensure provider defined types fully satisfy framework interfaces.
var _ resource.Resource = &TaxResource{}
var _ resource.ResourceWithImportState = &TaxResource{}

func NewTaxResource() resource.Resource {
	return &TaxResource{}
}

// TaxResource defines the resource implementation.
type TaxResource struct {
	client *sdk.SDK
}

// TaxResourceModel describes the resource data model.
type TaxResourceModel struct {
	Active      types.Bool   `tfsdk:"active"`
	Description types.String `tfsdk:"description"`
	ID          types.String `tfsdk:"id"`
	Rate        types.String `tfsdk:"rate"`
	Region      types.String `tfsdk:"region"`
	Type        types.String `tfsdk:"type"`
}

func (r *TaxResource) Metadata(ctx context.Context, req resource.MetadataRequest, resp *resource.MetadataResponse) {
	resp.TypeName = req.ProviderTypeName + "_tax"
}

func (r *TaxResource) Schema(ctx context.Context, req resource.SchemaRequest, resp *resource.SchemaResponse) {
	resp.Schema = schema.Schema{
		MarkdownDescription: "Tax Resource",
		Attributes: map[string]schema.Attribute{
			"active": schema.BoolAttribute{
				Required: true,
			},
			"description": schema.StringAttribute{
				Computed: true,
				Optional: true,
			},
			"id": schema.StringAttribute{
				Computed: true,
			},
			"rate": schema.StringAttribute{
				Required: true,
			},
			"region": schema.StringAttribute{
				Required:    true,
				Description: `must be one of ["DE", "AT", "CH"]`,
				Validators: []validator.String{
					stringvalidator.OneOf(
						"DE",
						"AT",
						"CH",
					),
				},
			},
			"type": schema.StringAttribute{
				Required:    true,
				Description: `must be one of ["VAT", "Custom"]`,
				Validators: []validator.String{
					stringvalidator.OneOf(
						"VAT",
						"Custom",
					),
				},
			},
		},
	}
}

func (r *TaxResource) Configure(ctx context.Context, req resource.ConfigureRequest, resp *resource.ConfigureResponse) {
	// Prevent panic if the provider has not been configured.
	if req.ProviderData == nil {
		return
	}

	client, ok := req.ProviderData.(*sdk.SDK)

	if !ok {
		resp.Diagnostics.AddError(
			"Unexpected Resource Configure Type",
			fmt.Sprintf("Expected *sdk.SDK, got: %T. Please report this issue to the provider developers.", req.ProviderData),
		)

		return
	}

	r.client = client
}

func (r *TaxResource) Create(ctx context.Context, req resource.CreateRequest, resp *resource.CreateResponse) {
	var data *TaxResourceModel
	var plan types.Object

	resp.Diagnostics.Append(req.Plan.Get(ctx, &plan)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(plan.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	request := *data.ToSharedTaxCreate()
	res, err := r.client.Tax.CreateTax(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if !(res.Tax != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromSharedTax(res.Tax)
	refreshPlan(ctx, plan, &data, resp.Diagnostics)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *TaxResource) Read(ctx context.Context, req resource.ReadRequest, resp *resource.ReadResponse) {
	var data *TaxResourceModel
	var item types.Object

	resp.Diagnostics.Append(req.State.Get(ctx, &item)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(item.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	// read.tax.hydrateread.tax.hydrate impedance mismatch: "boolean" != "class"trace=["Tax#create.req"]
	// {"Discriminator":null,"Output":false,"Validations":{"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null},"Comments":null,"Fields":[{"IsAdditionalProperties":false,"OriginalName":"_id","Type":{"OriginalName":"","OutputLocation":"","Name":"","Enum":null,"Format":"uuid","ResolvedModel":"","Type":"string","ContextStack":[],"Input":false,"Truncated":false,"ItemType":null,"Scope":"","CircularReference":null,"Examples":[{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false},{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false},{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false},{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false}],"IsComponent":false,"Output":false,"ResponseEnvelope":false,"EventStreamEnvelope":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false}],"Format":"uuid","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Extensions":{"x-speakeasy-trace":{"Tax#create.resp.id":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-in-get":true},"Discriminator":null,"Fields":[],"AssociatedTypes":[],"Comments":null,"Validations":{"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null}},"Name":"_id","Nullable":false,"Optional":false,"Default":null,"Comments":null,"Const":null,"Annotations":[{"Ignore":false,"FieldName":"_id"}],"ErrorMessage":false},{"Annotations":[{"Ignore":false,"FieldName":"active"}],"ErrorMessage":false,"Type":{"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"boolean","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"OriginalName":"","Comments":null,"Discriminator":null,"ItemType":null,"Validations":{"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null},"CircularReference":null,"EventStreamEnvelope":false,"ResolvedModel":"","Type":"boolean","Fields":[],"ContextStack":[],"Name":"","Examples":[],"Format":"","IsComponent":false,"ResponseEnvelope":false,"Extensions":{"x-speakeasy-in-get":true,"x-speakeasy-trace":{"Tax#create.req.active":true},"x-speakeasy-param-computed":true,"x-untouched":true},"Output":false,"OutputLocation":"","Enum":null,"AssociatedTypes":[],"Input":false,"Scope":"","Truncated":false},"Nullable":false,"Optional":false,"Default":null,"Const":null,"OriginalName":"active","Name":"active","Comments":null,"IsAdditionalProperties":false},{"Type":{"ResolvedModel":"","AssociatedTypes":[],"IsComponent":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Type":"string","Discriminator":null,"Input":false,"CircularReference":null,"OutputLocation":"","Examples":[],"Truncated":false,"EventStreamEnvelope":false,"Format":"","ItemType":null,"OriginalName":"","ContextStack":[],"Comments":null,"Scope":"","ResponseEnvelope":false,"Enum":null,"Fields":[],"Validations":{"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null},"Name":"","Extensions":{"x-speakeasy-trace":{"Tax#create.req.description":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get":true},"Output":false},"Annotations":[{"Ignore":false,"FieldName":"description"}],"IsAdditionalProperties":false,"ErrorMessage":false,"OriginalName":"description","Name":"description","Nullable":false,"Optional":true,"Default":null,"Const":null,"Comments":null},{"OriginalName":"rate","Optional":false,"Default":null,"Annotations":[{"Ignore":false,"FieldName":"rate"}],"ErrorMessage":false,"Type":{"ResponseEnvelope":false,"Input":false,"ItemType":null,"Type":"string","Comments":null,"Fields":[],"IsComponent":false,"ResolvedModel":"","OutputLocation":"","Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Extensions":{"x-speakeasy-trace":{"Tax#create.req.rate":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get":true},"Enum":null,"AssociatedTypes":[],"Output":false,"Truncated":false,"EventStreamEnvelope":false,"Name":"","Discriminator":null,"Examples":[],"OriginalName":"","ContextStack":[],"Scope":"","Format":"","Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"CircularReference":null},"Name":"rate","Nullable":false,"Const":null,"Comments":null,"IsAdditionalProperties":false},{"Annotations":[{"Ignore":false,"FieldName":"region"}],"OriginalName":"region","Type":{"Original":{"Name":"TaxCreate_region","OriginalName":"region","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["DE","AT","CH"],"Names":[],"Open":false,"Format":""},"Scope":"shared","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"TaxCreate","EventStreamEnvelope":false,"ResponseEnvelope":false},"AssociatedTypes":[],"Truncated":false,"Type":"enum","Enum":{"Values":["DE","AT","CH"],"Type":{"EventStreamEnvelope":false,"OriginalName":"","OutputLocation":"","Extensions":{},"Format":"","Truncated":false,"ResolvedModel":"","AssociatedTypes":[],"Comments":null,"ItemType":null,"CircularReference":null,"Enum":null,"Discriminator":null,"Input":false,"IsComponent":false,"Scope":"","Name":"","Type":"string","Output":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Fields":[],"ContextStack":[],"Examples":[],"Validations":{"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null},"ResponseEnvelope":false},"Open":false,"Names":[]},"OriginalName":"region","Fields":[],"Output":false,"Validations":{"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null},"Name":"TaxCreate_region","Extensions":{"x-speakeasy-trace":{"Tax#create.req.region":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get":true},"ItemType":null,"Scope":"shared","Comments":null,"Examples":[],"Input":false,"EventStreamEnvelope":false,"ResolvedModel":"TaxCreate","OutputLocation":"models/shared","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"IsComponent":false,"Discriminator":null,"CircularReference":null,"ResponseEnvelope":false,"Format":""},"Name":"region","Nullable":false,"Optional":false,"Comments":null,"Default":null,"Const":null,"IsAdditionalProperties":false,"ErrorMessage":false},{"OriginalName":"taxId","Type":{"Validations":{"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null},"OutputLocation":"","ContextStack":[],"Scope":"","ResponseEnvelope":false,"EventStreamEnvelope":false,"Fields":[],"ItemType":null,"Type":"string","Enum":null,"Examples":[{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false},{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false},{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false},{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false},{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false},{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false},{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false},{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false}],"Truncated":false,"CircularReference":null,"ResolvedModel":"","Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":{"Summary":"","Description":"The tax id","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Extensions":{"x-speakeasy-match":"id"},"Examples":[{"Value":{"Kind":8,"Style":0,"Tag":"!!str","Value":"123e4567-e89b-12d3-a456-426614174000","Anchor":"","Alias":null,"Content":[],"HeadComment":"","LineComment":"","FootComment":"","Line":310,"Column":16},"Description":"","IsTest":false}],"Format":"uuid","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Extensions":{"x-speakeasy-match":"id","x-speakeasy-trace":{"Tax#get.req.tax_id":true}},"Comments":{"Summary":"","Description":"The tax id","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Format":"uuid","IsComponent":false,"Output":false,"Name":"","AssociatedTypes":[],"Discriminator":null,"OriginalName":"","Input":false},"Optional":false,"Default":null,"IsAdditionalProperties":false,"Name":"taxId","Nullable":false,"Const":null,"Comments":{"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"The tax id","ExternalDocs":null,"ExtendedComments":{}},"Annotations":[{"Name":"taxId","Serialization":"","Style":"simple","Explode":false,"FieldType":{"Discriminator":null,"ResponseEnvelope":false,"Truncated":false,"Extensions":{"x-speakeasy-match":"id"},"Scope":"","IsComponent":false,"Input":false,"Output":false,"Examples":[{"Value":{"Line":310,"Kind":8,"Style":0,"Value":"123e4567-e89b-12d3-a456-426614174000","Alias":null,"HeadComment":"","FootComment":"","Tag":"!!str","Anchor":"","Content":[],"LineComment":"","Column":16},"Description":"","IsTest":false}],"OutputLocation":"","ContextStack":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"EventStreamEnvelope":false,"Type":"string","Enum":null,"ResolvedModel":"","Name":"","OriginalName":"","AssociatedTypes":[],"Comments":{"Summary":"","Description":"The tax id","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Format":"uuid","ComplexAny":false,"ItemType":null,"Fields":[]},"Hidden":false,"ParamType":"pathParam"}],"ErrorMessage":false},{"Comments":null,"IsAdditionalProperties":false,"ErrorMessage":false,"OriginalName":"type","Type":{"ResponseEnvelope":false,"IsComponent":false,"Enum":{"Type":{"Enum":null,"Truncated":false,"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"EventStreamEnvelope":false,"ResolvedModel":"","Extensions":{},"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"ContextStack":[],"AssociatedTypes":[],"IsComponent":false,"Name":"","Discriminator":null,"Output":false,"Scope":"","OutputLocation":"","Format":"","Input":false,"Comments":null,"Fields":[],"Examples":[],"ItemType":null,"CircularReference":null,"ResponseEnvelope":false,"OriginalName":"","Type":"string"},"Open":false,"Names":[],"Values":["VAT","Custom"]},"Fields":[],"Input":false,"AssociatedTypes":[],"Type":"enum","Examples":[],"CircularReference":null,"OriginalName":"type","Comments":null,"Discriminator":null,"Validations":{"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null},"OutputLocation":"models/shared","Format":"","Truncated":false,"EventStreamEnvelope":false,"Original":{"Name":"TaxCreate_type","OriginalName":"type","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["VAT","Custom"],"Names":[],"Open":false,"Format":""},"Scope":"shared","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"TaxCreate","EventStreamEnvelope":false,"ResponseEnvelope":false},"Extensions":{"x-untouched":true,"x-speakeasy-in-get":true,"x-speakeasy-trace":{"Tax#create.req.type":true},"x-speakeasy-param-computed":true},"Name":"TaxCreate_type","ItemType":null,"Output":false,"Scope":"shared","ResolvedModel":"TaxCreate","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}]},"Default":null,"Const":null,"Name":"type","Nullable":false,"Optional":false,"Annotations":[{"FieldName":"type","Ignore":false}]}],"OriginalName":"TaxCreate","OutputLocation":"models/shared","Enum":null,"Format":"","Scope":"shared","CircularReference":null,"ResponseEnvelope":false,"Name":"Tax","AssociatedTypes":[],"Examples":[],"EventStreamEnvelope":false,"ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":false,"MustUse":false},{"Type":"component","Identifier":"true","Used":false,"MustUse":false}],"Type":"class","Original":{"Name":"TaxCreate","OriginalName":"TaxCreate","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":false,"MustUse":false},{"Type":"component","Identifier":"true","Used":false,"MustUse":false}],"Type":"class","ItemType":null,"Fields":[{"Name":"active","OriginalName":"active","Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"boolean","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"active"}],"Nullable":false,"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null},{"Name":"description","OriginalName":"description","Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"description"}],"Nullable":false,"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null},{"Name":"rate","OriginalName":"rate","Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"rate"}],"Nullable":false,"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null},{"Name":"region","OriginalName":"region","Type":{"Name":"TaxCreate_region","OriginalName":"region","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["DE","AT","CH"],"Names":[],"Open":false,"Format":""},"Scope":"shared","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"TaxCreate","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"region"}],"Nullable":false,"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null},{"Name":"type","OriginalName":"type","Type":{"Name":"TaxCreate_type","OriginalName":"type","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"TaxCreate","Used":true,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["VAT","Custom"],"Names":[],"Open":false,"Format":""},"Scope":"shared","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"TaxCreate","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"type"}],"Nullable":false,"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null}],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"shared","IsComponent":true,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{"x-speakeasy-entity":"Tax"},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"TaxCreate","EventStreamEnvelope":false,"ResponseEnvelope":false},"Truncated":false,"IsComponent":true,"ItemType":null,"ResolvedModel":"TaxCreate","Extensions":{"x-speakeasy-in-get":true,"x-speakeasy-root":true,"x-speakeasy-entity":"Tax","x-speakeasy-trace":{"Tax#create.req":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get-request":true},"Input":false}
	// {"Discriminator":null,"Format":"","OriginalName":"","Enum":null,"Examples":[],"Type":"boolean","Output":false,"Truncated":false,"Fields":[],"ItemType":null,"AssociatedTypes":[],"ResponseEnvelope":false,"Name":"","Extensions":{},"OutputLocation":"","Input":false,"Scope":"","CircularReference":null,"EventStreamEnvelope":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"boolean","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MinLength":null,"Minimum":null,"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":{"Summary":"","Description":"Hydrates entities in relations when passed true","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"ResolvedModel":"","Comments":{"ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":"","Summary":"","Description":"Hydrates entities in relations when passed true"},"Validations":{"MaxItems":null,"MaxLength":null,"Maximum":null,"Pattern":null,"UniqueItems":null,"MinItems":null,"MinLength":null,"Minimum":null},"ContextStack":[],"IsComponent":false}
	var hydrate *bool
	var taxID string
	taxID = data.ID.ValueString()

	request := operations.GetTaxRequest{
		Hydrate: hydrate,
		TaxID:   taxID,
	}
	res, err := r.client.Tax.GetTax(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode == 404 {
		resp.State.RemoveResource(ctx)
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if !(res.Tax != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromSharedTax(res.Tax)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *TaxResource) Update(ctx context.Context, req resource.UpdateRequest, resp *resource.UpdateResponse) {
	var data *TaxResourceModel
	var plan types.Object

	resp.Diagnostics.Append(req.Plan.Get(ctx, &plan)...)
	if resp.Diagnostics.HasError() {
		return
	}

	merge(ctx, req, resp, &data)
	if resp.Diagnostics.HasError() {
		return
	}

	taxCreate := *data.ToSharedTaxCreate()
	var taxID string
	taxID = data.ID.ValueString()

	request := operations.UpdateTaxRequest{
		TaxCreate: taxCreate,
		TaxID:     taxID,
	}
	res, err := r.client.Tax.UpdateTax(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if !(res.Tax != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromSharedTax(res.Tax)
	refreshPlan(ctx, plan, &data, resp.Diagnostics)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *TaxResource) Delete(ctx context.Context, req resource.DeleteRequest, resp *resource.DeleteResponse) {
	var data *TaxResourceModel
	var item types.Object

	resp.Diagnostics.Append(req.State.Get(ctx, &item)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(item.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	var taxID string
	taxID = data.ID.ValueString()

	request := operations.DeleteTaxRequest{
		TaxID: taxID,
	}
	res, err := r.client.Tax.DeleteTax(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}

}

func (r *TaxResource) ImportState(ctx context.Context, req resource.ImportStateRequest, resp *resource.ImportStateResponse) {
	resp.Diagnostics.Append(resp.State.SetAttribute(ctx, path.Root("id"), req.ID)...)
}
