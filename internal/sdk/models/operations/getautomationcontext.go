// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

// QueryParamType - Type of the context to retrieve
type QueryParamType string

const (
	QueryParamTypeFile QueryParamType = "file"
)

func (e QueryParamType) ToPointer() *QueryParamType {
	return &e
}
func (e *QueryParamType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "file":
		*e = QueryParamType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryParamType: %v", v)
	}
}

type GetAutomationContextRequest struct {
	// Activity ID
	ActivityID string `queryParam:"style=form,explode=true,name=activity_id"`
	// Type of the context to retrieve
	Type QueryParamType `queryParam:"style=form,explode=true,name=type"`
}

func (o *GetAutomationContextRequest) GetActivityID() string {
	if o == nil {
		return ""
	}
	return o.ActivityID
}

func (o *GetAutomationContextRequest) GetType() QueryParamType {
	if o == nil {
		return QueryParamType("")
	}
	return o.Type
}

type GetAutomationContextResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Could not authenticate the user
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Retrieved the automation context successfully.
	Object map[string]map[string]any
}

func (o *GetAutomationContextResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAutomationContextResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *GetAutomationContextResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAutomationContextResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetAutomationContextResponse) GetObject() map[string]map[string]any {
	if o == nil {
		return nil
	}
	return o.Object
}
