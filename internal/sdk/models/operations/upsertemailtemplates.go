// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

type UpsertEmailTemplatesRequest struct {
	// Email templates payload
	EmailTemplates shared.EmailTemplates `request:"mediaType=application/json"`
	// Origin of the portal
	Origin string `queryParam:"style=form,explode=true,name=origin"`
}

func (o *UpsertEmailTemplatesRequest) GetEmailTemplates() shared.EmailTemplates {
	if o == nil {
		return shared.EmailTemplates{}
	}
	return o.EmailTemplates
}

func (o *UpsertEmailTemplatesRequest) GetOrigin() string {
	if o == nil {
		return ""
	}
	return o.Origin
}

type UpsertEmailTemplatesMessage string

const (
	UpsertEmailTemplatesMessageEmailTemplatesUpsertedSuccessfully UpsertEmailTemplatesMessage = "Email Templates upserted successfully"
)

func (e UpsertEmailTemplatesMessage) ToPointer() *UpsertEmailTemplatesMessage {
	return &e
}
func (e *UpsertEmailTemplatesMessage) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Email Templates upserted successfully":
		*e = UpsertEmailTemplatesMessage(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpsertEmailTemplatesMessage: %v", v)
	}
}

// UpsertEmailTemplatesResponseBody - Upserted email templates of the portal successfully.
type UpsertEmailTemplatesResponseBody struct {
	// Email templates used for authentication and internal processes
	EmailTemplates shared.EmailTemplates       `json:"emailTemplates"`
	Message        UpsertEmailTemplatesMessage `json:"message"`
}

func (o *UpsertEmailTemplatesResponseBody) GetEmailTemplates() shared.EmailTemplates {
	if o == nil {
		return shared.EmailTemplates{}
	}
	return o.EmailTemplates
}

func (o *UpsertEmailTemplatesResponseBody) GetMessage() UpsertEmailTemplatesMessage {
	if o == nil {
		return UpsertEmailTemplatesMessage("")
	}
	return o.Message
}

type UpsertEmailTemplatesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Could not authenticate the user
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Upserted email templates of the portal successfully.
	Object *UpsertEmailTemplatesResponseBody
}

func (o *UpsertEmailTemplatesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpsertEmailTemplatesResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *UpsertEmailTemplatesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpsertEmailTemplatesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpsertEmailTemplatesResponse) GetObject() *UpsertEmailTemplatesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
