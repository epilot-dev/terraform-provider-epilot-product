// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
	"time"
)

type GetAllOrdersRequest struct {
	From *float64 `default:"0" queryParam:"style=form,explode=true,name=from"`
	Size *float64 `default:"100" queryParam:"style=form,explode=true,name=size"`
}

func (g GetAllOrdersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetAllOrdersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *GetAllOrdersRequest) GetFrom() *float64 {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *GetAllOrdersRequest) GetSize() *float64 {
	if o == nil {
		return nil
	}
	return o.Size
}

type GetAllOrdersSchema string

const (
	GetAllOrdersSchemaOrder GetAllOrdersSchema = "order"
)

func (e GetAllOrdersSchema) ToPointer() *GetAllOrdersSchema {
	return &e
}
func (e *GetAllOrdersSchema) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "order":
		*e = GetAllOrdersSchema(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAllOrdersSchema: %v", v)
	}
}

// GetAllOrdersData - The order entity
type GetAllOrdersData struct {
	AdditionalProperties any `additionalProperties:"true" json:"-"`
	// Creation timestamp of the entity
	CreatedAt time.Time `json:"_created_at"`
	// Entity ID
	ID string `json:"_id"`
	// Organization ID the entity belongs to
	Org    string             `json:"_org"`
	Schema GetAllOrdersSchema `json:"_schema"`
	// Array of entity tags
	Tags []string `json:"_tags,omitempty"`
	// Title of the entity
	Title string `json:"_title"`
	// Last update timestamp of the entity
	UpdatedAt      time.Time              `json:"_updated_at"`
	JourneyActions *shared.JourneyActions `json:"journey_actions,omitempty"`
}

func (g GetAllOrdersData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetAllOrdersData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"_created_at", "_id", "_org", "_schema", "_title", "_updated_at"}); err != nil {
		return err
	}
	return nil
}

func (o *GetAllOrdersData) GetAdditionalProperties() any {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *GetAllOrdersData) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *GetAllOrdersData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetAllOrdersData) GetOrg() string {
	if o == nil {
		return ""
	}
	return o.Org
}

func (o *GetAllOrdersData) GetSchema() GetAllOrdersSchema {
	if o == nil {
		return GetAllOrdersSchema("")
	}
	return o.Schema
}

func (o *GetAllOrdersData) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *GetAllOrdersData) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *GetAllOrdersData) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *GetAllOrdersData) GetJourneyActions() *shared.JourneyActions {
	if o == nil {
		return nil
	}
	return o.JourneyActions
}

// GetAllOrdersResponseBody - The orders for the portal user returned successfully.
type GetAllOrdersResponseBody struct {
	Data []GetAllOrdersData `json:"data,omitempty"`
}

func (o *GetAllOrdersResponseBody) GetData() []GetAllOrdersData {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetAllOrdersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Could not authenticate the user
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The orders for the portal user returned successfully.
	Object *GetAllOrdersResponseBody
}

func (o *GetAllOrdersResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAllOrdersResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *GetAllOrdersResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAllOrdersResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetAllOrdersResponse) GetObject() *GetAllOrdersResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
