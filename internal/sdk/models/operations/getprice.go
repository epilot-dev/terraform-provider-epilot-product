// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

type GetPriceRequest struct {
	// Hydrates entities in relations when passed true
	Hydrate *bool `default:"false" queryParam:"style=form,explode=true,name=hydrate"`
	// The price id
	PriceID string `pathParam:"style=simple,explode=false,name=priceId"`
	// When passed true, the response will contain only fields that match the schema, with non-matching fields included in `__additional`
	Strict *bool `default:"false" queryParam:"style=form,explode=true,name=strict"`
}

func (g GetPriceRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetPriceRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"priceId"}); err != nil {
		return err
	}
	return nil
}

func (g *GetPriceRequest) GetHydrate() *bool {
	if g == nil {
		return nil
	}
	return g.Hydrate
}

func (g *GetPriceRequest) GetPriceID() string {
	if g == nil {
		return ""
	}
	return g.PriceID
}

func (g *GetPriceRequest) GetStrict() *bool {
	if g == nil {
		return nil
	}
	return g.Strict
}

type GetPriceResponse struct {
	// Any error based on client data errors
	ClientError *shared.ClientError
	// HTTP response content type for this operation
	ContentType string
	// Price entity with id
	Price *shared.Price
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (g *GetPriceResponse) GetClientError() *shared.ClientError {
	if g == nil {
		return nil
	}
	return g.ClientError
}

func (g *GetPriceResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetPriceResponse) GetPrice() *shared.Price {
	if g == nil {
		return nil
	}
	return g.Price
}

func (g *GetPriceResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetPriceResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}
