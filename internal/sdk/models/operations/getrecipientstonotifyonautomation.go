// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

type GetRecipientsToNotifyOnAutomationRequestBody struct {
	// Entity ID
	ContextID string `json:"context_id"`
	// Emails array that are part of the automation
	Emails []string `json:"emails"`
	// Entity ID
	TemplateID string `json:"template_id"`
}

func (o *GetRecipientsToNotifyOnAutomationRequestBody) GetContextID() string {
	if o == nil {
		return ""
	}
	return o.ContextID
}

func (o *GetRecipientsToNotifyOnAutomationRequestBody) GetEmails() []string {
	if o == nil {
		return []string{}
	}
	return o.Emails
}

func (o *GetRecipientsToNotifyOnAutomationRequestBody) GetTemplateID() string {
	if o == nil {
		return ""
	}
	return o.TemplateID
}

type Recipients struct {
	// Email of the recipient
	Email string `json:"email"`
	// Entity ID
	RecipientID string `json:"recipient_id"`
}

func (o *Recipients) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *Recipients) GetRecipientID() string {
	if o == nil {
		return ""
	}
	return o.RecipientID
}

// GetRecipientsToNotifyOnAutomationResponseBody - Returns the valid recipients to notify successfully.
type GetRecipientsToNotifyOnAutomationResponseBody struct {
	// Reason to not notify the user
	Message *string `json:"message,omitempty"`
	// Filtered recipients to notify
	Recipients []Recipients `json:"recipients,omitempty"`
}

func (o *GetRecipientsToNotifyOnAutomationResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetRecipientsToNotifyOnAutomationResponseBody) GetRecipients() []Recipients {
	if o == nil {
		return nil
	}
	return o.Recipients
}

type GetRecipientsToNotifyOnAutomationResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Internal Server Error
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Returns the valid recipients to notify successfully.
	Object *GetRecipientsToNotifyOnAutomationResponseBody
}

func (o *GetRecipientsToNotifyOnAutomationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetRecipientsToNotifyOnAutomationResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *GetRecipientsToNotifyOnAutomationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetRecipientsToNotifyOnAutomationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetRecipientsToNotifyOnAutomationResponse) GetObject() *GetRecipientsToNotifyOnAutomationResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
