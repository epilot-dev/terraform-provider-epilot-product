// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

type QueryParamContextEntities struct {
	// Entity id
	EntityID string `queryParam:"name=entity_id"`
	// Entity schema
	EntitySchema string `queryParam:"name=entity_schema"`
}

func (o *QueryParamContextEntities) GetEntityID() string {
	if o == nil {
		return ""
	}
	return o.EntityID
}

func (o *QueryParamContextEntities) GetEntitySchema() string {
	if o == nil {
		return ""
	}
	return o.EntitySchema
}

type GetPortalPagesRequest struct {
	// If the request is in a context of certain entities (i.e. the user in in a context of a specific contract), pages can be customized for that. Portal User and Contact entities are automatically part of the context.
	ContextEntities []QueryParamContextEntities `queryParam:"style=form,explode=true,name=context_entities"`
	// Contract context for blocks. Use context_entities instead.
	//
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	ContractID *string `queryParam:"style=form,explode=true,name=contract_id"`
	Domain     string  `queryParam:"style=form,explode=true,name=domain"`
	// The fields to include in the response
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// The filter to apply to the response
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
}

func (o *GetPortalPagesRequest) GetContextEntities() []QueryParamContextEntities {
	if o == nil {
		return nil
	}
	return o.ContextEntities
}

func (o *GetPortalPagesRequest) GetContractID() *string {
	if o == nil {
		return nil
	}
	return o.ContractID
}

func (o *GetPortalPagesRequest) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *GetPortalPagesRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *GetPortalPagesRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

type GetPortalPagesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Could not authenticate the user
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The portal pages have been fetched successfully.
	Classes []shared.Page
}

func (o *GetPortalPagesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetPortalPagesResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *GetPortalPagesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetPortalPagesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetPortalPagesResponse) GetClasses() []shared.Page {
	if o == nil {
		return nil
	}
	return o.Classes
}
