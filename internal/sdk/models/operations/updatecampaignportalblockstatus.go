// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

type EntityRefs struct {
	// Entity ID
	EntityID string `json:"entity_id"`
	// Schema of the entity (e.g., contact, contract, opportunity, order, meter)
	EntitySchema string `json:"entity_schema"`
}

func (o *EntityRefs) GetEntityID() string {
	if o == nil {
		return ""
	}
	return o.EntityID
}

func (o *EntityRefs) GetEntitySchema() string {
	if o == nil {
		return ""
	}
	return o.EntitySchema
}

// Status - The status to set for the campaign portal block
type Status string

const (
	StatusSeen      Status = "seen"
	StatusDismissed Status = "dismissed"
	StatusClicked   Status = "clicked"
)

func (e Status) ToPointer() *Status {
	return &e
}
func (e *Status) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "seen":
		fallthrough
	case "dismissed":
		fallthrough
	case "clicked":
		*e = Status(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Status: %v", v)
	}
}

type UpdateCampaignPortalBlockStatusRequestBody struct {
	// Array of entity references with their schemas
	EntityRefs []EntityRefs `json:"entity_refs"`
	// The status to set for the campaign portal block
	Status Status `json:"status"`
}

func (o *UpdateCampaignPortalBlockStatusRequestBody) GetEntityRefs() []EntityRefs {
	if o == nil {
		return []EntityRefs{}
	}
	return o.EntityRefs
}

func (o *UpdateCampaignPortalBlockStatusRequestBody) GetStatus() Status {
	if o == nil {
		return Status("")
	}
	return o.Status
}

type UpdateCampaignPortalBlockStatusRequest struct {
	RequestBody UpdateCampaignPortalBlockStatusRequestBody `request:"mediaType=application/json"`
	// ID of the campaign
	CampaignID string `pathParam:"style=simple,explode=false,name=campaign_id"`
}

func (o *UpdateCampaignPortalBlockStatusRequest) GetRequestBody() UpdateCampaignPortalBlockStatusRequestBody {
	if o == nil {
		return UpdateCampaignPortalBlockStatusRequestBody{}
	}
	return o.RequestBody
}

func (o *UpdateCampaignPortalBlockStatusRequest) GetCampaignID() string {
	if o == nil {
		return ""
	}
	return o.CampaignID
}

// UpdateCampaignPortalBlockStatusResponseBody - Campaign portal block status updated successfully.
type UpdateCampaignPortalBlockStatusResponseBody struct {
	// Number of entities that failed to update
	Failed int64 `json:"failed"`
	// Whether the operation completed successfully
	Success bool `json:"success"`
	// Total number of entities processed
	Total int64 `json:"total"`
	// Number of entities successfully updated
	Updated int64 `json:"updated"`
}

func (o *UpdateCampaignPortalBlockStatusResponseBody) GetFailed() int64 {
	if o == nil {
		return 0
	}
	return o.Failed
}

func (o *UpdateCampaignPortalBlockStatusResponseBody) GetSuccess() bool {
	if o == nil {
		return false
	}
	return o.Success
}

func (o *UpdateCampaignPortalBlockStatusResponseBody) GetTotal() int64 {
	if o == nil {
		return 0
	}
	return o.Total
}

func (o *UpdateCampaignPortalBlockStatusResponseBody) GetUpdated() int64 {
	if o == nil {
		return 0
	}
	return o.Updated
}

type UpdateCampaignPortalBlockStatusResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// The request could not be validated
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Campaign portal block status updated successfully.
	Object *UpdateCampaignPortalBlockStatusResponseBody
}

func (o *UpdateCampaignPortalBlockStatusResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateCampaignPortalBlockStatusResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *UpdateCampaignPortalBlockStatusResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateCampaignPortalBlockStatusResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateCampaignPortalBlockStatusResponse) GetObject() *UpdateCampaignPortalBlockStatusResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
