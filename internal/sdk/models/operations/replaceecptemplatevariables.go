// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

type RequestBody struct {
	// Entity ID
	ID           *string `json:"_id,omitempty"`
	IsMainEntity *bool   `json:"is_main_entity,omitempty"`
}

func (o *RequestBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *RequestBody) GetIsMainEntity() *bool {
	if o == nil {
		return nil
	}
	return o.IsMainEntity
}

type CustomerPortal struct {
	EntityLink         *string  `json:"entityLink,omitempty"`
	InvitationLink     *string  `json:"invitationLink,omitempty"`
	NewDocumentLink    *string  `json:"newDocumentLink,omitempty"`
	UserEmailsOnEntity []string `json:"userEmailsOnEntity,omitempty"`
}

func (o *CustomerPortal) GetEntityLink() *string {
	if o == nil {
		return nil
	}
	return o.EntityLink
}

func (o *CustomerPortal) GetInvitationLink() *string {
	if o == nil {
		return nil
	}
	return o.InvitationLink
}

func (o *CustomerPortal) GetNewDocumentLink() *string {
	if o == nil {
		return nil
	}
	return o.NewDocumentLink
}

func (o *CustomerPortal) GetUserEmailsOnEntity() []string {
	if o == nil {
		return nil
	}
	return o.UserEmailsOnEntity
}

type InstallerPortal struct {
	EntityLink         *string  `json:"entityLink,omitempty"`
	InvitationLink     *string  `json:"invitationLink,omitempty"`
	NewDocumentLink    *string  `json:"newDocumentLink,omitempty"`
	UserEmailsOnEntity []string `json:"userEmailsOnEntity,omitempty"`
}

func (o *InstallerPortal) GetEntityLink() *string {
	if o == nil {
		return nil
	}
	return o.EntityLink
}

func (o *InstallerPortal) GetInvitationLink() *string {
	if o == nil {
		return nil
	}
	return o.InvitationLink
}

func (o *InstallerPortal) GetNewDocumentLink() *string {
	if o == nil {
		return nil
	}
	return o.NewDocumentLink
}

func (o *InstallerPortal) GetUserEmailsOnEntity() []string {
	if o == nil {
		return nil
	}
	return o.UserEmailsOnEntity
}

// ReplaceECPTemplateVariablesResponseBody - Replaced portal template variables successfully.
type ReplaceECPTemplateVariablesResponseBody struct {
	CustomerPortal  *CustomerPortal  `json:"customerPortal,omitempty"`
	InstallerPortal *InstallerPortal `json:"installerPortal,omitempty"`
}

func (o *ReplaceECPTemplateVariablesResponseBody) GetCustomerPortal() *CustomerPortal {
	if o == nil {
		return nil
	}
	return o.CustomerPortal
}

func (o *ReplaceECPTemplateVariablesResponseBody) GetInstallerPortal() *InstallerPortal {
	if o == nil {
		return nil
	}
	return o.InstallerPortal
}

type ReplaceECPTemplateVariablesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Could not authenticate the user
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Replaced portal template variables successfully.
	Object *ReplaceECPTemplateVariablesResponseBody
}

func (o *ReplaceECPTemplateVariablesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ReplaceECPTemplateVariablesResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *ReplaceECPTemplateVariablesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ReplaceECPTemplateVariablesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ReplaceECPTemplateVariablesResponse) GetObject() *ReplaceECPTemplateVariablesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
