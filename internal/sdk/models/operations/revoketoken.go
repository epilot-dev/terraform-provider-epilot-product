// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

// RevokeTokenRequestBody - Token payload
type RevokeTokenRequestBody struct {
	// Refresh Token to be revoked
	RefreshToken string `json:"refresh_token"`
}

func (o *RevokeTokenRequestBody) GetRefreshToken() string {
	if o == nil {
		return ""
	}
	return o.RefreshToken
}

type RevokeTokenMessage string

const (
	RevokeTokenMessageTokenRevokedSuccessfully RevokeTokenMessage = "Token revoked successfully"
)

func (e RevokeTokenMessage) ToPointer() *RevokeTokenMessage {
	return &e
}
func (e *RevokeTokenMessage) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Token revoked successfully":
		*e = RevokeTokenMessage(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RevokeTokenMessage: %v", v)
	}
}

// RevokeTokenResponseBody - Access Tokens revoked successfully for the given Refresh Token.
type RevokeTokenResponseBody struct {
	Message *RevokeTokenMessage `json:"message,omitempty"`
}

func (o *RevokeTokenResponseBody) GetMessage() *RevokeTokenMessage {
	if o == nil {
		return nil
	}
	return o.Message
}

type RevokeTokenResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Could not authenticate the user
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Access Tokens revoked successfully for the given Refresh Token.
	Object *RevokeTokenResponseBody
}

func (o *RevokeTokenResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RevokeTokenResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *RevokeTokenResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RevokeTokenResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RevokeTokenResponse) GetObject() *RevokeTokenResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
