// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

type Workflows struct {
	DefitionID *string `json:"defition_id,omitempty"`
	Name       *string `json:"name,omitempty"`
}

func (o *Workflows) GetDefitionID() *string {
	if o == nil {
		return nil
	}
	return o.DefitionID
}

func (o *Workflows) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type GetSearchResultsForOpportunitiesRequestBody struct {
	Addresses []string      `json:"addresses,omitempty"`
	Customers []string      `json:"customers,omitempty"`
	Purposes  []string      `json:"purposes,omitempty"`
	Workflows [][]Workflows `json:"workflows,omitempty"`
}

func (o *GetSearchResultsForOpportunitiesRequestBody) GetAddresses() []string {
	if o == nil {
		return nil
	}
	return o.Addresses
}

func (o *GetSearchResultsForOpportunitiesRequestBody) GetCustomers() []string {
	if o == nil {
		return nil
	}
	return o.Customers
}

func (o *GetSearchResultsForOpportunitiesRequestBody) GetPurposes() []string {
	if o == nil {
		return nil
	}
	return o.Purposes
}

func (o *GetSearchResultsForOpportunitiesRequestBody) GetWorkflows() [][]Workflows {
	if o == nil {
		return nil
	}
	return o.Workflows
}

type GetSearchResultsForOpportunitiesRequest struct {
	RequestBody GetSearchResultsForOpportunitiesRequestBody `request:"mediaType=application/json"`
	From        *float64                                    `default:"0" queryParam:"style=form,explode=true,name=from"`
	Size        *float64                                    `default:"1000" queryParam:"style=form,explode=true,name=size"`
}

func (g GetSearchResultsForOpportunitiesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetSearchResultsForOpportunitiesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"RequestBody"}); err != nil {
		return err
	}
	return nil
}

func (o *GetSearchResultsForOpportunitiesRequest) GetRequestBody() GetSearchResultsForOpportunitiesRequestBody {
	if o == nil {
		return GetSearchResultsForOpportunitiesRequestBody{}
	}
	return o.RequestBody
}

func (o *GetSearchResultsForOpportunitiesRequest) GetFrom() *float64 {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *GetSearchResultsForOpportunitiesRequest) GetSize() *float64 {
	if o == nil {
		return nil
	}
	return o.Size
}

// GetSearchResultsForOpportunitiesResponseBody - The opportunities is retrieved successfully for the portal user.
type GetSearchResultsForOpportunitiesResponseBody struct {
	Data []shared.Opportunity `json:"data,omitempty"`
}

func (o *GetSearchResultsForOpportunitiesResponseBody) GetData() []shared.Opportunity {
	if o == nil {
		return nil
	}
	return o.Data
}

type GetSearchResultsForOpportunitiesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Could not authenticate the user
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The opportunities is retrieved successfully for the portal user.
	Object *GetSearchResultsForOpportunitiesResponseBody
}

func (o *GetSearchResultsForOpportunitiesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetSearchResultsForOpportunitiesResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *GetSearchResultsForOpportunitiesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetSearchResultsForOpportunitiesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetSearchResultsForOpportunitiesResponse) GetObject() *GetSearchResultsForOpportunitiesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
