// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

type GetUserEntryPointRequest struct {
	Domain string `queryParam:"style=form,explode=true,name=domain"`
	Email  string `queryParam:"style=form,explode=true,name=email"`
}

func (o *GetUserEntryPointRequest) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *GetUserEntryPointRequest) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

// EntryPoint - The entry point for the user
type EntryPoint string

const (
	EntryPointPassword EntryPoint = "PASSWORD"
	EntryPointSso      EntryPoint = "SSO"
)

func (e EntryPoint) ToPointer() *EntryPoint {
	return &e
}
func (e *EntryPoint) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PASSWORD":
		fallthrough
	case "SSO":
		*e = EntryPoint(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryPoint: %v", v)
	}
}

// GetUserEntryPointResponseBody - Returned the entry point for the user
type GetUserEntryPointResponseBody struct {
	// The entry point for the user
	EntryPoint EntryPoint `json:"entry_point"`
	// Whether the user is soft deleted
	IsSoftDeleted *bool `json:"is_soft_deleted,omitempty"`
	// The SSO providers for the user
	PreferredSsoProviders []string `json:"preferred_sso_providers,omitempty"`
	// Whether the user exists in the portal
	UserExists bool `json:"user_exists"`
}

func (o *GetUserEntryPointResponseBody) GetEntryPoint() EntryPoint {
	if o == nil {
		return EntryPoint("")
	}
	return o.EntryPoint
}

func (o *GetUserEntryPointResponseBody) GetIsSoftDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.IsSoftDeleted
}

func (o *GetUserEntryPointResponseBody) GetPreferredSsoProviders() []string {
	if o == nil {
		return nil
	}
	return o.PreferredSsoProviders
}

func (o *GetUserEntryPointResponseBody) GetUserExists() bool {
	if o == nil {
		return false
	}
	return o.UserExists
}

type GetUserEntryPointResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Internal Server Error
	ErrorResp *shared.ErrorResp
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Returned the entry point for the user
	Object *GetUserEntryPointResponseBody
}

func (o *GetUserEntryPointResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetUserEntryPointResponse) GetErrorResp() *shared.ErrorResp {
	if o == nil {
		return nil
	}
	return o.ErrorResp
}

func (o *GetUserEntryPointResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetUserEntryPointResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetUserEntryPointResponse) GetObject() *GetUserEntryPointResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
