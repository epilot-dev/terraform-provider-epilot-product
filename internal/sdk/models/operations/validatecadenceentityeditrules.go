// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/models/shared"
	"net/http"
)

type ValidateCadenceEntityEditRulesRequest struct {
	// Get activities after this timestamp
	Attribute *string `queryParam:"style=form,explode=true,name=attribute"`
	// Entity id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Entity Type
	Slug shared.EntitySlug `pathParam:"style=simple,explode=false,name=slug"`
}

func (o *ValidateCadenceEntityEditRulesRequest) GetAttribute() *string {
	if o == nil {
		return nil
	}
	return o.Attribute
}

func (o *ValidateCadenceEntityEditRulesRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ValidateCadenceEntityEditRulesRequest) GetSlug() shared.EntitySlug {
	if o == nil {
		return shared.EntitySlug("")
	}
	return o.Slug
}

// ValidateCadenceEntityEditRulesResponseBody - Success
type ValidateCadenceEntityEditRulesResponseBody struct {
	FailedRule       *shared.EntityEditRule `json:"failedRule,omitempty"`
	IsBlockedByRules *bool                  `json:"isBlockedByRules,omitempty"`
}

func (o *ValidateCadenceEntityEditRulesResponseBody) GetFailedRule() *shared.EntityEditRule {
	if o == nil {
		return nil
	}
	return o.FailedRule
}

func (o *ValidateCadenceEntityEditRulesResponseBody) GetIsBlockedByRules() *bool {
	if o == nil {
		return nil
	}
	return o.IsBlockedByRules
}

type ValidateCadenceEntityEditRulesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	Object *ValidateCadenceEntityEditRulesResponseBody
}

func (o *ValidateCadenceEntityEditRulesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ValidateCadenceEntityEditRulesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ValidateCadenceEntityEditRulesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ValidateCadenceEntityEditRulesResponse) GetObject() *ValidateCadenceEntityEditRulesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
