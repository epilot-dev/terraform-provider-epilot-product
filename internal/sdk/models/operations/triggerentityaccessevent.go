// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type TriggerEntityAccessEventRequest struct {
	// Entity ID
	EntityID *string `queryParam:"style=form,explode=true,name=entity_id"`
	// Portal origin
	Origin string `queryParam:"style=form,explode=true,name=origin"`
	// Entity schema
	Schema string `pathParam:"style=simple,explode=false,name=schema"`
}

func (o *TriggerEntityAccessEventRequest) GetEntityID() *string {
	if o == nil {
		return nil
	}
	return o.EntityID
}

func (o *TriggerEntityAccessEventRequest) GetOrigin() string {
	if o == nil {
		return ""
	}
	return o.Origin
}

func (o *TriggerEntityAccessEventRequest) GetSchema() string {
	if o == nil {
		return ""
	}
	return o.Schema
}

// TriggerEntityAccessEventResponseBody - The event has been triggered successfully.
type TriggerEntityAccessEventResponseBody struct {
	// Event ID
	EventID *string `json:"eventId,omitempty"`
}

func (o *TriggerEntityAccessEventResponseBody) GetEventID() *string {
	if o == nil {
		return nil
	}
	return o.EventID
}

type TriggerEntityAccessEventResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The event has been triggered successfully.
	Object *TriggerEntityAccessEventResponseBody
}

func (o *TriggerEntityAccessEventResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TriggerEntityAccessEventResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TriggerEntityAccessEventResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TriggerEntityAccessEventResponse) GetObject() *TriggerEntityAccessEventResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
