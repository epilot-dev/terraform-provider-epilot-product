// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/internal/utils"
)

type ProductCreateSchema string

const (
	ProductCreateSchemaProduct ProductCreateSchema = "product"
)

func (e ProductCreateSchema) ToPointer() *ProductCreateSchema {
	return &e
}
func (e *ProductCreateSchema) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "product":
		*e = ProductCreateSchema(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductCreateSchema: %v", v)
	}
}

// ProductCreateType - The type of Product:
//
// | type | description |
// |----| ----|
// | `product` | Represents a physical good |
// | `service` | Represents a service or virtual product |
type ProductCreateType string

const (
	ProductCreateTypeProduct ProductCreateType = "product"
	ProductCreateTypeService ProductCreateType = "service"
)

func (e ProductCreateType) ToPointer() *ProductCreateType {
	return &e
}
func (e *ProductCreateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "product":
		fallthrough
	case "service":
		*e = ProductCreateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductCreateType: %v", v)
	}
}

type ProductCreate struct {
	// Additional fields that are not part of the schema
	Additional        any           `json:"__additional,omitempty"`
	AvailabilityFiles *BaseRelation `json:"_availability_files,omitempty"`
	Files             *BaseRelation `json:"_files,omitempty"`
	// Manifest ID used to create/update the entity
	Manifest []string             `json:"_manifest,omitempty"`
	Purpose  []string             `json:"_purpose,omitempty"`
	Schema   *ProductCreateSchema `json:"_schema,omitempty"`
	Tags     []string             `json:"_tags,omitempty"`
	Active   bool                 `json:"active"`
	// The categories of the product
	Categories []string `json:"categories,omitempty"`
	// The product code
	Code *string `json:"code,omitempty"`
	// A description of the product. Multi-line supported.
	Description *string `json:"description,omitempty"`
	Feature     []any   `json:"feature,omitempty"`
	// Not visible to customers, only in internal tables
	InternalName *string `json:"internal_name,omitempty"`
	// The description for the product
	Name             string        `json:"name"`
	PriceOptions     *BaseRelation `json:"price_options,omitempty"`
	ProductDownloads *BaseRelation `json:"product_downloads,omitempty"`
	ProductImages    *BaseRelation `json:"product_images,omitempty"`
	// The type of Product:
	//
	// | type | description |
	// |----| ----|
	// | `product` | Represents a physical good |
	// | `service` | Represents a service or virtual product |
	//
	Type *ProductCreateType `default:"product" json:"type"`
}

func (p ProductCreate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProductCreate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"active", "name"}); err != nil {
		return err
	}
	return nil
}

func (p *ProductCreate) GetAdditional() any {
	if p == nil {
		return nil
	}
	return p.Additional
}

func (p *ProductCreate) GetAvailabilityFiles() *BaseRelation {
	if p == nil {
		return nil
	}
	return p.AvailabilityFiles
}

func (p *ProductCreate) GetFiles() *BaseRelation {
	if p == nil {
		return nil
	}
	return p.Files
}

func (p *ProductCreate) GetManifest() []string {
	if p == nil {
		return nil
	}
	return p.Manifest
}

func (p *ProductCreate) GetPurpose() []string {
	if p == nil {
		return nil
	}
	return p.Purpose
}

func (p *ProductCreate) GetSchema() *ProductCreateSchema {
	if p == nil {
		return nil
	}
	return p.Schema
}

func (p *ProductCreate) GetTags() []string {
	if p == nil {
		return nil
	}
	return p.Tags
}

func (p *ProductCreate) GetActive() bool {
	if p == nil {
		return false
	}
	return p.Active
}

func (p *ProductCreate) GetCategories() []string {
	if p == nil {
		return nil
	}
	return p.Categories
}

func (p *ProductCreate) GetCode() *string {
	if p == nil {
		return nil
	}
	return p.Code
}

func (p *ProductCreate) GetDescription() *string {
	if p == nil {
		return nil
	}
	return p.Description
}

func (p *ProductCreate) GetFeature() []any {
	if p == nil {
		return nil
	}
	return p.Feature
}

func (p *ProductCreate) GetInternalName() *string {
	if p == nil {
		return nil
	}
	return p.InternalName
}

func (p *ProductCreate) GetName() string {
	if p == nil {
		return ""
	}
	return p.Name
}

func (p *ProductCreate) GetPriceOptions() *BaseRelation {
	if p == nil {
		return nil
	}
	return p.PriceOptions
}

func (p *ProductCreate) GetProductDownloads() *BaseRelation {
	if p == nil {
		return nil
	}
	return p.ProductDownloads
}

func (p *ProductCreate) GetProductImages() *BaseRelation {
	if p == nil {
		return nil
	}
	return p.ProductImages
}

func (p *ProductCreate) GetType() *ProductCreateType {
	if p == nil {
		return nil
	}
	return p.Type
}
