// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/internal/utils"
	"time"
)

type Entity struct {
	// Entity ID
	ID     *string `json:"id,omitempty"`
	Schema *string `json:"schema,omitempty"`
}

func (o *Entity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Entity) GetSchema() *string {
	if o == nil {
		return nil
	}
	return o.Schema
}

type Payload struct {
	Caller *ActivityCallerContext `json:"caller,omitempty"`
	Entity *Entity                `json:"entity,omitempty"`
}

func (o *Payload) GetCaller() *ActivityCallerContext {
	if o == nil {
		return nil
	}
	return o.Caller
}

func (o *Payload) GetEntity() *Entity {
	if o == nil {
		return nil
	}
	return o.Entity
}

type ActivityItem struct {
	// See https://github.com/ulid/spec
	ID *string `json:"_id,omitempty"`
	// Message for activity. Supports handlebars syntax.
	Message   string     `json:"message"`
	Payload   *Payload   `json:"payload,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// Title for activity. Supports handlebars syntax.
	Title string `json:"title"`
	Type  string `json:"type"`
}

func (a ActivityItem) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ActivityItem) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"message", "title", "type"}); err != nil {
		return err
	}
	return nil
}

func (o *ActivityItem) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ActivityItem) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *ActivityItem) GetPayload() *Payload {
	if o == nil {
		return nil
	}
	return o.Payload
}

func (o *ActivityItem) GetTimestamp() *time.Time {
	if o == nil {
		return nil
	}
	return o.Timestamp
}

func (o *ActivityItem) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *ActivityItem) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}
