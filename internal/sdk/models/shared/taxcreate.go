// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaxCreateSchema string

const (
	TaxCreateSchemaTax TaxCreateSchema = "tax"
)

func (e TaxCreateSchema) ToPointer() *TaxCreateSchema {
	return &e
}
func (e *TaxCreateSchema) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tax":
		*e = TaxCreateSchema(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaxCreateSchema: %v", v)
	}
}

type TaxCreateType string

const (
	TaxCreateTypeVat    TaxCreateType = "VAT"
	TaxCreateTypeCustom TaxCreateType = "Custom"
)

func (e TaxCreateType) ToPointer() *TaxCreateType {
	return &e
}
func (e *TaxCreateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VAT":
		fallthrough
	case "Custom":
		*e = TaxCreateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaxCreateType: %v", v)
	}
}

type TaxCreate struct {
	// Additional fields that are not part of the schema
	Additional  map[string]any   `json:"__additional,omitempty"`
	Files       *BaseRelation    `json:"_files,omitempty"`
	Schema      *TaxCreateSchema `json:"_schema,omitempty"`
	Tags        []string         `json:"_tags,omitempty"`
	Active      bool             `json:"active"`
	Description *string          `json:"description,omitempty"`
	Rate        string           `json:"rate"`
	Region      string           `json:"region"`
	Type        TaxCreateType    `json:"type"`
}

func (o *TaxCreate) GetAdditional() map[string]any {
	if o == nil {
		return nil
	}
	return o.Additional
}

func (o *TaxCreate) GetFiles() *BaseRelation {
	if o == nil {
		return nil
	}
	return o.Files
}

func (o *TaxCreate) GetSchema() *TaxCreateSchema {
	if o == nil {
		return nil
	}
	return o.Schema
}

func (o *TaxCreate) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *TaxCreate) GetActive() bool {
	if o == nil {
		return false
	}
	return o.Active
}

func (o *TaxCreate) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *TaxCreate) GetRate() string {
	if o == nil {
		return ""
	}
	return o.Rate
}

func (o *TaxCreate) GetRegion() string {
	if o == nil {
		return ""
	}
	return o.Region
}

func (o *TaxCreate) GetType() TaxCreateType {
	if o == nil {
		return TaxCreateType("")
	}
	return o.Type
}
