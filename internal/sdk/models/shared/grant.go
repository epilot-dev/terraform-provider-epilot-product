// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-product/internal/sdk/internal/utils"
)

// Effect of the permission
type Effect string

const (
	EffectAllow Effect = "allow"
	EffectDeny  Effect = "deny"
)

func (e Effect) ToPointer() *Effect {
	return &e
}
func (e *Effect) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "deny":
		*e = Effect(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Effect: %v", v)
	}
}

type Grant struct {
	// Action for granting permission
	Action string `json:"action"`
	// Effect of the permission
	Effect *Effect `default:"allow" json:"effect"`
	// Resource for granting permission
	Resource *string `json:"resource,omitempty"`
}

func (g Grant) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *Grant) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"action"}); err != nil {
		return err
	}
	return nil
}

func (o *Grant) GetAction() string {
	if o == nil {
		return ""
	}
	return o.Action
}

func (o *Grant) GetEffect() *Effect {
	if o == nil {
		return nil
	}
	return o.Effect
}

func (o *Grant) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}
