// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Icon - Configuration of the icon for the external link
type Icon struct {
	// The color of the icon
	Color *string `json:"color,omitempty"`
	// The name of the icon
	Name *string `json:"name,omitempty"`
	// Size of the icon in pixels
	Size *int64 `json:"size,omitempty"`
}

func (o *Icon) GetColor() *string {
	if o == nil {
		return nil
	}
	return o.Color
}

func (o *Icon) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Icon) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

type Rules struct {
}

type ExternalLinkType string

const (
	ExternalLinkTypeLink     ExternalLinkType = "link"
	ExternalLinkTypeJourney  ExternalLinkType = "journey"
	ExternalLinkTypeSeamless ExternalLinkType = "seamless"
)

func (e ExternalLinkType) ToPointer() *ExternalLinkType {
	return &e
}
func (e *ExternalLinkType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "link":
		fallthrough
	case "journey":
		fallthrough
	case "seamless":
		*e = ExternalLinkType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExternalLinkType: %v", v)
	}
}

type ExternalLink struct {
	// Attribute associated with the link
	Attribute *string `json:"attribute,omitempty"`
	// Attribute value for the link
	AttributeValue *string `json:"attribute_value,omitempty"`
	// Entity associated with the link
	Entity *string `json:"entity,omitempty"`
	// Seamless link identifier in a form of [extensionId, linkId]
	ExtensionLinkID []string `json:"extension_link_id,omitempty"`
	// Configuration of the icon for the external link
	Icon *Icon `json:"icon,omitempty"`
	// Unique identifier for the external link
	ID    string            `json:"id"`
	Label map[string]string `json:"label"`
	// The URL of the external link
	Link  string           `json:"link"`
	Rules []Rules          `json:"rules,omitempty"`
	Type  ExternalLinkType `json:"type"`
}

func (o *ExternalLink) GetAttribute() *string {
	if o == nil {
		return nil
	}
	return o.Attribute
}

func (o *ExternalLink) GetAttributeValue() *string {
	if o == nil {
		return nil
	}
	return o.AttributeValue
}

func (o *ExternalLink) GetEntity() *string {
	if o == nil {
		return nil
	}
	return o.Entity
}

func (o *ExternalLink) GetExtensionLinkID() []string {
	if o == nil {
		return nil
	}
	return o.ExtensionLinkID
}

func (o *ExternalLink) GetIcon() *Icon {
	if o == nil {
		return nil
	}
	return o.Icon
}

func (o *ExternalLink) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ExternalLink) GetLabel() map[string]string {
	if o == nil {
		return map[string]string{}
	}
	return o.Label
}

func (o *ExternalLink) GetLink() string {
	if o == nil {
		return ""
	}
	return o.Link
}

func (o *ExternalLink) GetRules() []Rules {
	if o == nil {
		return nil
	}
	return o.Rules
}

func (o *ExternalLink) GetType() ExternalLinkType {
	if o == nil {
		return ExternalLinkType("")
	}
	return o.Type
}
